{
  "version": "3.2",
  "log": [
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "b894540920e43e32ffa3aefc997969505294965ac1042239891afabffce050b1",
          "withoutMetadata": "78ba926418e0de8d23fa23aaf85418b4ee8118203efec09a30fb8b2e6f9e838b",
          "linkedWithoutMetadata": "78ba926418e0de8d23fa23aaf85418b4ee8118203efec09a30fb8b2e6f9e838b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInterestFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "efe28d7bcb9d86c3c53f5dd8985b3d55fca97be10c86ba6f2f967fae37b1229f",
          "withoutMetadata": "e19321f5d940bd2922efd7e87541780a02e8f15fbb45dd5ab6c9961271da18d9",
          "linkedWithoutMetadata": "e19321f5d940bd2922efd7e87541780a02e8f15fbb45dd5ab6c9961271da18d9"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInterestFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "2ad87beb1ec32f90a19d839e05975f65ab0b33ea252c51a458365f8e1e7ab5f1",
          "withoutMetadata": "59bc92e21018fec2593545c581bc73430ba26b6f85dd5692b31f84a2b6aa2434",
          "linkedWithoutMetadata": "59bc92e21018fec2593545c581bc73430ba26b6f85dd5692b31f84a2b6aa2434"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInterestFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "df370153ff31b8f45b0b8d9a5ff967854eb4db5b8be14e0aa786d6770ea9179b",
          "withoutMetadata": "9cbb987c2d6e7eeb9214bb957069f4c4a168a0e3c36424c2efbde9a113b6086b",
          "linkedWithoutMetadata": "9cbb987c2d6e7eeb9214bb957069f4c4a168a0e3c36424c2efbde9a113b6086b"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInterestFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b76937fae3d3fca56debc5b00961793be25b8bba766c2a433f2c30af531f78a0",
          "withoutMetadata": "dcd1184b2607aade9ce1f3d68b5d254f272bf6d19e2e27300f6195d76b6e288a",
          "linkedWithoutMetadata": "dcd1184b2607aade9ce1f3d68b5d254f272bf6d19e2e27300f6195d76b6e288a"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DaiToken": {
        "src": "contracts/DAI.sol:7",
        "version": {
          "withMetadata": "9b58b8920e55d316f75f45157edb2e192c3b60b07f1d608867e291a75cc652b2",
          "withoutMetadata": "a78e277168008a5a8720b7c9190bf1e6ecff13c4d43b69e7fcbac2314737d427",
          "linkedWithoutMetadata": "a78e277168008a5a8720b7c9190bf1e6ecff13c4d43b69e7fcbac2314737d427"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DaiToken",
            "src": "contracts/DAI.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "DaiToken",
              "src": "contracts/DAI.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SblToken": {
        "src": "contracts/SblToken.sol:7",
        "version": {
          "withMetadata": "895aebc61bfa5c010b6810c10ca38a48159ecc9038eede1524d15621128084a5",
          "withoutMetadata": "08e0ffff89077acf5e49b226427fdb8764554c3c31e8e8fd490f830ce9f6ca12",
          "linkedWithoutMetadata": "08e0ffff89077acf5e49b226427fdb8764554c3c31e8e8fd490f830ce9f6ca12"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SblToken",
            "src": "contracts/SblToken.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SblToken",
              "src": "contracts/SblToken.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "WETHToken": {
        "src": "contracts/WETH.sol:7",
        "version": {
          "withMetadata": "d505b03eb1d62a707c0ca63e8678ea29023cc8672a82902fa725554aab34cd1f",
          "withoutMetadata": "6dec081163f9d9a00b77ae9ad26b34d988b487d05e438b67ff06b290c252907c",
          "linkedWithoutMetadata": "6dec081163f9d9a00b77ae9ad26b34d988b487d05e438b67ff06b290c252907c"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WETHToken",
            "src": "contracts/WETH.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "WETHToken",
              "src": "contracts/WETH.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "0aa0d10290b13d2e6420754e5e67afbd0d5143c1d767db827f3509dc750afa24",
          "withoutMetadata": "32b9e9779a4adccf24c8d7f8d038bf443c723c71d0f0f05fd9eec77c54523512",
          "linkedWithoutMetadata": "32b9e9779a4adccf24c8d7f8d038bf443c723c71d0f0f05fd9eec77c54523512"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInterestFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "9178a838bb162907e69f0e2887e65aa66fcfb973316f5ed6d0dd69b4b43a0b2c",
          "withoutMetadata": "b631de1dff222d59437595320be8c7db36881469cfd63c0591debbd4a71ece07",
          "linkedWithoutMetadata": "b631de1dff222d59437595320be8c7db36881469cfd63c0591debbd4a71ece07"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInterestFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "ffa0dbfb71a776d630da122674188dc94205b245871c315520de307f172a2e2a",
          "withoutMetadata": "212944b2b43809167496d091a503c7ded1e5773c8137251adc0df9360bab1b4d",
          "linkedWithoutMetadata": "212944b2b43809167496d091a503c7ded1e5773c8137251adc0df9360bab1b4d"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInterestFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "9d4229eca3e617eb9b289b9f1ac7b66e67af4fb7d36a507d4d46f50f7f38db5e",
          "withoutMetadata": "599f8067891c2f1fcd6607977db74c5c1fc023f48ebf6203d27bdd567e6382f1",
          "linkedWithoutMetadata": "599f8067891c2f1fcd6607977db74c5c1fc023f48ebf6203d27bdd567e6382f1"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInterestFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "91af56a9fe1535b4fdd197f0e4b943a48e91c7376e0a4fa59645a290b77dafb2",
          "withoutMetadata": "adc4863ce8f7adb87a21e95ab1ff8e21fd1590c937a9abd21f650e683f2ad1e7",
          "linkedWithoutMetadata": "adc4863ce8f7adb87a21e95ab1ff8e21fd1590c937a9abd21f650e683f2ad1e7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInterestFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "f5eefc6f88e72789d6469af28e3f9bb38928dc2e5855dbb0487a82023cabd198",
          "withoutMetadata": "393113b237430c4490193852e229c86830b5931b9888b6df4f128c790c502234",
          "linkedWithoutMetadata": "393113b237430c4490193852e229c86830b5931b9888b6df4f128c790c502234"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInterestFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "ac101405939a718cb28198fde6804096a768b6b79ff8048824064ae28c1e0a52",
          "withoutMetadata": "0c97284e8d87e9160700a4a177844299a424aaf11a14cab0ebf8024cc8a9e659",
          "linkedWithoutMetadata": "0c97284e8d87e9160700a4a177844299a424aaf11a14cab0ebf8024cc8a9e659"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInterestFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "bb3182552c74ae2fd5fe09503d62ef300c9e7a0fadc479661ccb0e712b98b6ac",
          "withoutMetadata": "a5214d3a0ee5c7c1f38345a6314938eead54344822e468621dd13eea705a2ad5",
          "linkedWithoutMetadata": "a5214d3a0ee5c7c1f38345a6314938eead54344822e468621dd13eea705a2ad5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInterestFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "91af56a9fe1535b4fdd197f0e4b943a48e91c7376e0a4fa59645a290b77dafb2",
          "withoutMetadata": "adc4863ce8f7adb87a21e95ab1ff8e21fd1590c937a9abd21f650e683f2ad1e7",
          "linkedWithoutMetadata": "adc4863ce8f7adb87a21e95ab1ff8e21fd1590c937a9abd21f650e683f2ad1e7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInterestFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "924bd2e1c8ff2c6618a1db4f20c35dae7c5462dede44d57350fedc9b4443bd4b",
          "withoutMetadata": "04811674960e903a6feeca537f8f1fc4f49c952281403eecdaf2f1326cbfaa4d",
          "linkedWithoutMetadata": "04811674960e903a6feeca537f8f1fc4f49c952281403eecdaf2f1326cbfaa4d"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInterestFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "59d0ddfd92570a4c5189ce4e918e6e1b0f89a449a1ac609abd5e899e24a7f744",
          "withoutMetadata": "48300130b1e6c5921a3099a42c028770f4ee27aa5ecc5353f9a5cf932dafbdea",
          "linkedWithoutMetadata": "48300130b1e6c5921a3099a42c028770f4ee27aa5ecc5353f9a5cf932dafbdea"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInterestFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "bfdf0743d313e9b2d53fad3dde5f30032e4cc1f18f6474198a791cc0ef7fc7dc",
          "withoutMetadata": "bdd41fc11cc414347dc95360d4004c2714705df5c648043fb3601bea87df4a41",
          "linkedWithoutMetadata": "bdd41fc11cc414347dc95360d4004c2714705df5c648043fb3601bea87df4a41"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInterestFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "ea0b8d91c22dd046912aca1aad194bb2ed1f6bb1759c759f3a02b86045844e21",
          "withoutMetadata": "0c5eca7c8e41a0766c57d086f1bab7cd0826d2b0d3ca3e7cd0d5ca97aed147e3",
          "linkedWithoutMetadata": "0c5eca7c8e41a0766c57d086f1bab7cd0826d2b0d3ca3e7cd0d5ca97aed147e3"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInterestFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "594acfc0c1c823db6d4d156ed7e42296e46ed30ed110ebe6d7e07a965e3a449a",
          "withoutMetadata": "de383dd8a135e1fb315703d1ed72182c8ef557dad7d56c5689f1c01e02f4698e",
          "linkedWithoutMetadata": "de383dd8a135e1fb315703d1ed72182c8ef557dad7d56c5689f1c01e02f4698e"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "f32fbf7b77b0c60eccb95acafb1deb98bb72f0da52b5a40ec61df30cc762d5a1",
          "withoutMetadata": "f2001f5e7415da939517da3ccd0cec8051153640f5b194f7f5fa8a1b6027f02d",
          "linkedWithoutMetadata": "f2001f5e7415da939517da3ccd0cec8051153640f5b194f7f5fa8a1b6027f02d"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "e2bbb54a4fbda05eaa7e024862131b4805f3f83fa4a03a0bf6ad4fcc089a2d03",
          "withoutMetadata": "3a980e2f161728b6b02d37d0408c519553031b59cfbee3d62a25c4f3c7d8682c",
          "linkedWithoutMetadata": "3a980e2f161728b6b02d37d0408c519553031b59cfbee3d62a25c4f3c7d8682c"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "91cef8dc49f18e5417a31b90e63703cb861828271741dc3ca40648594117e5a5",
          "withoutMetadata": "d49f10351b45200754534142fc1415b991dd01a1aa55f2dc8996113977e26ddc",
          "linkedWithoutMetadata": "d49f10351b45200754534142fc1415b991dd01a1aa55f2dc8996113977e26ddc"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "8c648817b47490dd71f3c69f8a8ead5cf353e742fbaaad2e79d0cd310eaf88b3",
          "withoutMetadata": "52b1fc5bab48909ccaa0e58f5e8e1ff0a904675502d8613f3ba2f38d27501c0a",
          "linkedWithoutMetadata": "52b1fc5bab48909ccaa0e58f5e8e1ff0a904675502d8613f3ba2f38d27501c0a"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "a1c5ae87e25a49f02902fa09d25388b329692813e681e732efc546f882f2e898",
          "withoutMetadata": "cb2d391fc0cd57e5c85de59548db6b8639f99c9e2676d074ebde50c615862a3d",
          "linkedWithoutMetadata": "cb2d391fc0cd57e5c85de59548db6b8639f99c9e2676d074ebde50c615862a3d"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "71dc5bd589d1088d7fac146b8000f0b59dd033074598607e6beb919a2f60b2d5",
          "withoutMetadata": "2a9b2bc0d98081138c08894796164f6470a1d92c7b4f6213f14258867c56cdea",
          "linkedWithoutMetadata": "2a9b2bc0d98081138c08894796164f6470a1d92c7b4f6213f14258867c56cdea"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "cfa2945e0ae6e25d3382ed547cc3af26f1bdaeb304f70d6bf20aa4e071d7e233",
          "withoutMetadata": "656c962daac623b6bc4875c7f19049d2cf41fa07cf1e33e58d7fd9937b19fdd5",
          "linkedWithoutMetadata": "656c962daac623b6bc4875c7f19049d2cf41fa07cf1e33e58d7fd9937b19fdd5"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "5c4f519f02ef2cb16b7104395d8fd6510d7c1d30c54b57f6ce249cf7eedeb6a1",
          "withoutMetadata": "b570d357cf9a28c5fed8d382431b0ea3f2343a3d83f92b0dd42650ce286a0cc9",
          "linkedWithoutMetadata": "b570d357cf9a28c5fed8d382431b0ea3f2343a3d83f92b0dd42650ce286a0cc9"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "9eaf22883adba1625ae4ee69c2e2914fb00eb818453f736b14fabd18e75e2c21",
          "withoutMetadata": "46d68a0dd4a19c5aa7405e742fda39a182f6e0aefa09af75acbef04873741979",
          "linkedWithoutMetadata": "46d68a0dd4a19c5aa7405e742fda39a182f6e0aefa09af75acbef04873741979"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "2893d779366395cc19c94b4d23dbd967f6d8620d11949887ad3ccd627ba56b5c",
          "withoutMetadata": "2baa67632354cafac91bf0a2f4fbb139dea6a3cf8b7d07553ca2e9d5bedb466f",
          "linkedWithoutMetadata": "2baa67632354cafac91bf0a2f4fbb139dea6a3cf8b7d07553ca2e9d5bedb466f"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "06c185a77308a825a651d80231cc084857e0daef17aee2dbbd3062b412031f41",
          "withoutMetadata": "612e41bab947243a64d39bcb1f220e481a0a33a8ba4a86dd37209c3734df89c9",
          "linkedWithoutMetadata": "612e41bab947243a64d39bcb1f220e481a0a33a8ba4a86dd37209c3734df89c9"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "6fc82b602d5906c84a3a3e40044edb1becd80e9a1152608eafca03a1f9b4deb0",
          "withoutMetadata": "848d1b438f7e21a4bc6ea533d3c860f1123580b8b5b028dcd46d90b82b3236fc",
          "linkedWithoutMetadata": "848d1b438f7e21a4bc6ea533d3c860f1123580b8b5b028dcd46d90b82b3236fc"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "499e980186af57cf7d6e98c58440f70a6ab6ccaafbe925a3000b6c7974919463",
          "withoutMetadata": "a930c83e0ca23c4f9e8502e247808d276b8affbc9076c3775a5e635918cb9a2f",
          "linkedWithoutMetadata": "a930c83e0ca23c4f9e8502e247808d276b8affbc9076c3775a5e635918cb9a2f"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "1f68d46a72246ed2a94ec35364408dd0b87458562170c11433812f01bf5d0fda",
          "withoutMetadata": "1180b3622e7ba2fc09d8109a7a4790a0947fcc85df51257888c6737bde47e615",
          "linkedWithoutMetadata": "1180b3622e7ba2fc09d8109a7a4790a0947fcc85df51257888c6737bde47e615"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "eb5be720b8310f9bf535b9839c7a6e3a8a45064089ef5c6135cf775e3406f91a",
          "withoutMetadata": "efc80754bbc385f7c273c0fed068b28b0f122c63df5ce3509d47d3f06cd11a46",
          "linkedWithoutMetadata": "efc80754bbc385f7c273c0fed068b28b0f122c63df5ce3509d47d3f06cd11a46"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "8d218a8c76c1502033417817c18d554503bccc6269d86a1e44619ea8e8c7a7a7",
          "withoutMetadata": "f850e6243a5289a3cad793c07e951f9ea904c3514eb3ef825324105ad50c32ef",
          "linkedWithoutMetadata": "f850e6243a5289a3cad793c07e951f9ea904c3514eb3ef825324105ad50c32ef"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "8c400453abe1a3672a254e343cf3ca8f5b31cac8ee44074653c485b3202b0bdc",
          "withoutMetadata": "efc80754bbc385f7c273c0fed068b28b0f122c63df5ce3509d47d3f06cd11a46",
          "linkedWithoutMetadata": "efc80754bbc385f7c273c0fed068b28b0f122c63df5ce3509d47d3f06cd11a46"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "72ae1084e1ec14eb9f8dc068392b761b702c7e5403954574d74fd1f34d4642e8",
          "withoutMetadata": "251977d74062035cdcddd337d340ac3230ae2c596c3f7c9162e0870e2175d5f8",
          "linkedWithoutMetadata": "251977d74062035cdcddd337d340ac3230ae2c596c3f7c9162e0870e2175d5f8"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "2fac9573f84628a8e6d5b9f2c76e64e149dff327d23b152d7c2d8c663ebb66d4",
          "withoutMetadata": "e207d31b3d50d2d2a97523e08ef655522449fe374d09f24c4f432a38cd81831c",
          "linkedWithoutMetadata": "e207d31b3d50d2d2a97523e08ef655522449fe374d09f24c4f432a38cd81831c"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "24704522bfb2330cdb8e890512ba670a8c21f3b24bfd5270e13eb30895e2e387",
          "withoutMetadata": "209c2f5e43406d865f3a0241b3838c2b87efb9d088b94f115e54599136e221de",
          "linkedWithoutMetadata": "209c2f5e43406d865f3a0241b3838c2b87efb9d088b94f115e54599136e221de"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "a7bee420706a4640acf596328926176187ea8880b02828bff6387d50d7da0b3f",
          "withoutMetadata": "7a7cc870a7594ad93e9c08f30357c9b0c36083d4a4322c1a5ded14c1d1e7249a",
          "linkedWithoutMetadata": "7a7cc870a7594ad93e9c08f30357c9b0c36083d4a4322c1a5ded14c1d1e7249a"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "7b3c918eca4241323d416fb6639ec216ce24ddb8fb0b2db6dea4bec7cc09532a",
          "withoutMetadata": "6bcbc3a41fec1f339d574573fc79d38f121aa3297dbed202906cfcd0e4ec0e33",
          "linkedWithoutMetadata": "6bcbc3a41fec1f339d574573fc79d38f121aa3297dbed202906cfcd0e4ec0e33"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "dd9bdc7006df18ad8e1aaac940aed4b1782f9959bfb6ce75fcdf013a88b18f7d",
          "withoutMetadata": "bf5aff53f4dc03f1cb300c5f458cd445782a1267e666aefd50e35b032e98487e",
          "linkedWithoutMetadata": "bf5aff53f4dc03f1cb300c5f458cd445782a1267e666aefd50e35b032e98487e"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "2827d7e0f8d4d49eedb89f44f3486352036d001b6060f6e893b9d30273d5394f",
          "withoutMetadata": "afb25574a68b38a505b614b1a8ffd76de4524a0ac8c4458498c089e90bab593c",
          "linkedWithoutMetadata": "afb25574a68b38a505b614b1a8ffd76de4524a0ac8c4458498c089e90bab593c"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "6e5764dacf1594b82bcf3477dc6579bb595a1196e09c1a227a7e35401799bc07",
          "withoutMetadata": "94d0af8f6888a2d3cd925f584cb6020b11df45e3249217948633e3fdbd3db8ed",
          "linkedWithoutMetadata": "94d0af8f6888a2d3cd925f584cb6020b11df45e3249217948633e3fdbd3db8ed"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "636c0012be02bb0c76deafec65f9a412e2f2ac80e3b3774c8a5cbedd1c8851e3",
          "withoutMetadata": "3acaf08dad17d83203f50cad3e98ff01dc3ab803cb5d57133ad2ba9855e74449",
          "linkedWithoutMetadata": "3acaf08dad17d83203f50cad3e98ff01dc3ab803cb5d57133ad2ba9855e74449"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "9dc93e629a5bf4140cdbd0a26896f1837720906baf576fe423b138bd49e4e1ed",
          "withoutMetadata": "d2b099c1c892c855c20d6804144e1d80b88972a61a418b598653dcd8f59cdb25",
          "linkedWithoutMetadata": "d2b099c1c892c855c20d6804144e1d80b88972a61a418b598653dcd8f59cdb25"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "a890f838fa9a4dbaf4c08b2fe6d54a1e9f7a13b1043156137faf195cbc47bbe3",
          "withoutMetadata": "42f9d4c33a0f66d346bdbe4d4f02566cdecd5cb282d9737c8ad28c7f6a9a845d",
          "linkedWithoutMetadata": "42f9d4c33a0f66d346bdbe4d4f02566cdecd5cb282d9737c8ad28c7f6a9a845d"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "f80fd2d8b8e123e8a133e72a18d4c1a6cff4125dcada12d973d9e24bf2edc366",
          "withoutMetadata": "85e830bdcc278ba565b31f23711dfba0d1a038f0d05c94cf55920c228052b64f",
          "linkedWithoutMetadata": "85e830bdcc278ba565b31f23711dfba0d1a038f0d05c94cf55920c228052b64f"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8,uint256)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "740fc6872eff0810a14f2a08754acf370db4e21aa64ec84165e36cf4fe8317b8",
          "withoutMetadata": "1bef064cb369bb6de128b3c313bf16478382fd3a83d7c1c1d1e4875101bfb7d7",
          "linkedWithoutMetadata": "1bef064cb369bb6de128b3c313bf16478382fd3a83d7c1c1d1e4875101bfb7d7"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "editCategories(uint8,uint256)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "3306abfbfe36e69be767a9ee49799b221db45ea3fb01d078683327cfcaa5fe92",
          "withoutMetadata": "2605814a2281d59c62cfacf25d5d5ac5a3a8aa5d7949967ac1a10890292211b3",
          "linkedWithoutMetadata": "2605814a2281d59c62cfacf25d5d5ac5a3a8aa5d7949967ac1a10890292211b3"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "editCategories(uint8,uint256)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "234ba824f926cb9657b1dc784cdf63cfd1c8742eacf16b646fbb02a7e26183be",
          "withoutMetadata": "be3c6f8b1544566c9622a19d2a19d1af6361dbfab5faf3c4681bc6b06f441aa2",
          "linkedWithoutMetadata": "be3c6f8b1544566c9622a19d2a19d1af6361dbfab5faf3c4681bc6b06f441aa2"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "editCategories(uint8,uint256)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "b0a14e0fadd7ebe746bdb867d6236e1914293c43065ea2173d4d4dd387279315",
          "withoutMetadata": "be3c6f8b1544566c9622a19d2a19d1af6361dbfab5faf3c4681bc6b06f441aa2",
          "linkedWithoutMetadata": "be3c6f8b1544566c9622a19d2a19d1af6361dbfab5faf3c4681bc6b06f441aa2"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "editCategories(uint8,uint256)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "63cd6ec625b9423ccf5cdec95dbf17f4ac9aaf11c6069952247a6d878b4efce2",
          "withoutMetadata": "bb83a8b68a4be518e7fcfd236a727d3cfc8b588352df7f728449ac3de2de10da",
          "linkedWithoutMetadata": "bb83a8b68a4be518e7fcfd236a727d3cfc8b588352df7f728449ac3de2de10da"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "addSoulBondToken(address,uint8)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "editCategories(uint8,uint256)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "30c79e69fd191b1a6a9415bfd07ca492c1818a3859cb6c10903f95e60acc0f02",
          "withoutMetadata": "14841085994ea99efa0e96406ed27338f6515262077ec079176f02e08144c72d",
          "linkedWithoutMetadata": "14841085994ea99efa0e96406ed27338f6515262077ec079176f02e08144c72d"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "getTokenPrice(address)",
          "addSoulBondToken(address,uint8)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "editCategories(uint8,uint256)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "d8b0a11082c34b8eb35edea541e792c771eb2a362693865b751692cb6ffb1214",
          "withoutMetadata": "bbad2361c8e3dbb96e95dede5996a389824bdb757fcad1ea0f7e6c626578f3d5",
          "linkedWithoutMetadata": "bbad2361c8e3dbb96e95dede5996a389824bdb757fcad1ea0f7e6c626578f3d5"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "getTokenPrice(address)",
          "addSoulBondToken(address,uint8)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "editCategories(uint8,uint256)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "e6d2d6c781ffb28b7aaf9ad80ea5fe2fb64ad6f547a42591cb9955e481d58ac0",
          "withoutMetadata": "33a9c4e1655f499523d32b65888a6214cc3b6c38411fbc9d30963c7dbf2c217a",
          "linkedWithoutMetadata": "33a9c4e1655f499523d32b65888a6214cc3b6c38411fbc9d30963c7dbf2c217a"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "getTokenPrice(address)",
          "addSoulBondToken(address,uint8)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "editCategories(uint8,uint256)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "bd5cc7aadcf480d33ad8b1b82a6834c011b3cd7f36b7f5c02911bf9bcf5390c0",
          "withoutMetadata": "5960c294fdc8442fe629fdc75e5e3bff326349e13f1b0de212f2c1a7b18cdcf2",
          "linkedWithoutMetadata": "5960c294fdc8442fe629fdc75e5e3bff326349e13f1b0de212f2c1a7b18cdcf2"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "getTokenPrice(address)",
          "addSoulBondToken(address,uint8)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "editCategories(uint8,uint256)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "07a9034c332f326ad0dcd8ffa5a26b378df4a7253f57dcb926373f9ff22c3efc",
          "withoutMetadata": "4d2d9c289faaf294c46babcf3e36aff3022b72feffd110ffb2ea10b92a153893",
          "linkedWithoutMetadata": "4d2d9c289faaf294c46babcf3e36aff3022b72feffd110ffb2ea10b92a153893"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "getTokenPrice(address)",
          "addSoulBondToken(address,uint8)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "editCategories(uint8,uint256)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "6d427b8c34124d2adfeba7674e6deedb7e7b2eab047af529eae691977a6c1355",
          "withoutMetadata": "574a56e37b94bcc0bbe57c96614b75478713e46a9cd218faf0014a165752bb0b",
          "linkedWithoutMetadata": "574a56e37b94bcc0bbe57c96614b75478713e46a9cd218faf0014a165752bb0b"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "getTokenPrice(address)",
          "addSoulBondToken(address,uint8)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "editCategories(uint8,uint256)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "e7e247cdfda5ae883bf3ccb26f98613ee80b24bd7315475e25b0ceffff402386",
          "withoutMetadata": "4f17ea0d60d51e2a69ff7f2605292ec63739425746dcb66299a37c38e712bb8d",
          "linkedWithoutMetadata": "4f17ea0d60d51e2a69ff7f2605292ec63739425746dcb66299a37c38e712bb8d"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "getTokenPrice(address)",
          "addSoulBondToken(address,uint8)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "editCategories(uint8,uint256)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "b622218900d0c85a446d497e34fe7e0fc16b93de315e68f3dbe00e773c481fc1",
          "withoutMetadata": "2fccbe09a3170c7972c12b0e38e48dbab29f8cada7fa7086219452a0ecd4f78f",
          "linkedWithoutMetadata": "2fccbe09a3170c7972c12b0e38e48dbab29f8cada7fa7086219452a0ecd4f78f"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "getTokenPrice(address)",
          "addSoulBondToken(address,uint8)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "editCategories(uint8,uint256)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "0b50400c4cea50e1451fbbf970f6ca7575653e0f7d4ff5aa83ab11680bce381c",
          "withoutMetadata": "11fcec1c78d67f5082a32d78fb09c7dd412908b9c34d71c0e0db5914d9972395",
          "linkedWithoutMetadata": "11fcec1c78d67f5082a32d78fb09c7dd412908b9c34d71c0e0db5914d9972395"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "getTokenPrice(address)",
          "addSoulBondToken(address,uint8)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "editCategories(uint8,uint256)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "47e456cc728051993d6d86f70df9065a304aa37455e48ef7ffe3ffde25c30551",
          "withoutMetadata": "6072ded95e8179eb4586d1d3f1739ab8e5d0974bf96b1614be4ccedc1a2f7113",
          "linkedWithoutMetadata": "6072ded95e8179eb4586d1d3f1739ab8e5d0974bf96b1614be4ccedc1a2f7113"
        },
        "inherit": [],
        "libraries": [
          "console"
        ],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "getTokenPrice(address)",
          "addSoulBondToken(address,uint8)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "editCategories(uint8,uint256)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "e67ad5be0e8b4ab782c9f64bebec95c7bf2978a07404fc08ffa25da6b7d1b13c",
          "withoutMetadata": "6ca1c858227ea9d8826eddb3f959e4eac11cd02b45f3b9703903da3c39d650a5",
          "linkedWithoutMetadata": "6ca1c858227ea9d8826eddb3f959e4eac11cd02b45f3b9703903da3c39d650a5"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "getInterestRate(address)",
          "getTokenPrice(address)",
          "addSoulBondToken(address,uint8)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "editCategories(uint8,uint256)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "a50afd186581f11222ec0c96e02d8d491177f923c7d8ddf7d40907689f5ce0d2",
          "withoutMetadata": "dc061adbde17861a865bebe075b361936803262c13f9d9e2e362885ffcc57423",
          "linkedWithoutMetadata": "dc061adbde17861a865bebe075b361936803262c13f9d9e2e362885ffcc57423"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "addTokenPrice(address,address)",
          "getInterestRate(address)",
          "getTokenPrice(address)",
          "addSoulBondToken(address,uint8)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "editCategories(uint8,uint256)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "b7b321a629ea0e6c959f7dfd67ba8204de71942a26e3231d536282607995bb22",
          "withoutMetadata": "9a551d99f8d6c693486cdbad3402610b4a6522717e15716e2557d8288395302a",
          "linkedWithoutMetadata": "9a551d99f8d6c693486cdbad3402610b4a6522717e15716e2557d8288395302a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "bcf116a9950926cc5c5c5e2975657bbaa8670053bdba022e30fb79e04d685d35",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SoulBondA": {
        "src": "contracts/SoulBondA.sol:6",
        "version": {
          "withMetadata": "119abdbbf43b3b948cafe24968678a0a2f9daa54d1bc391914f3d47af9f0e410",
          "withoutMetadata": "763bb02bf1f940ea1653aca6250c5cc46f83d30bdced733cb9f4da462c92b5fb",
          "linkedWithoutMetadata": "763bb02bf1f940ea1653aca6250c5cc46f83d30bdced733cb9f4da462c92b5fb"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondA",
            "src": "contracts/SoulBondA.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondA",
              "src": "contracts/SoulBondA.sol:8"
            },
            {
              "label": "counter",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SoulBondA",
              "src": "contracts/SoulBondA.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondB": {
        "src": "contracts/SoulBondB.sol:6",
        "version": {
          "withMetadata": "baa98812d692a0016c3adbf4c3da9433aa9ffb60585b205b4b5fc4a0622a6de2",
          "withoutMetadata": "146c48af5e2b7e341bf3ecd2f39eb0c6fd05e35d2c41e68586da4f4f329e5df2",
          "linkedWithoutMetadata": "146c48af5e2b7e341bf3ecd2f39eb0c6fd05e35d2c41e68586da4f4f329e5df2"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondB",
            "src": "contracts/SoulBondB.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondB",
              "src": "contracts/SoulBondB.sol:8"
            },
            {
              "label": "counter",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SoulBondB",
              "src": "contracts/SoulBondB.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondC": {
        "src": "contracts/SoulBondC.sol:6",
        "version": {
          "withMetadata": "b70cf9889d0ce72588fb8fd59d2482b9e85fbe6f0a16e99d8cab673708f02692",
          "withoutMetadata": "f8749eacd5ad98892bbdafa24cea48e1caeb852a67abeaab49e5ba4530d878e1",
          "linkedWithoutMetadata": "f8749eacd5ad98892bbdafa24cea48e1caeb852a67abeaab49e5ba4530d878e1"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondC",
            "src": "contracts/SoulBondC.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondC",
              "src": "contracts/SoulBondC.sol:8"
            },
            {
              "label": "counter",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SoulBondC",
              "src": "contracts/SoulBondC.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondD": {
        "src": "contracts/SoulBondD.sol:6",
        "version": {
          "withMetadata": "cda3b6623e26f9e6f017a4c18f4da36dfaac6b8bf639156aeb19050842c9ea7d",
          "withoutMetadata": "672ded0a081e4791e10feec33fb0de918d3a1b08aff465110949f5baae6dfc9d",
          "linkedWithoutMetadata": "672ded0a081e4791e10feec33fb0de918d3a1b08aff465110949f5baae6dfc9d"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondD",
            "src": "contracts/SoulBondD.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondD",
              "src": "contracts/SoulBondD.sol:8"
            },
            {
              "label": "counter",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SoulBondD",
              "src": "contracts/SoulBondD.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondS": {
        "src": "contracts/SoulBondS.sol:6",
        "version": {
          "withMetadata": "3d44db3ab7e0d21680039df6d3977b5cc6f9dfa42f252d7ab291a03ddb5167aa",
          "withoutMetadata": "a22f8d239e3be1224f7aa8c3bb97d51bba35d8d514c0beeeb9e3bb0ecd287b15",
          "linkedWithoutMetadata": "a22f8d239e3be1224f7aa8c3bb97d51bba35d8d514c0beeeb9e3bb0ecd287b15"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondS",
            "src": "contracts/SoulBondS.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondS",
              "src": "contracts/SoulBondS.sol:8"
            },
            {
              "label": "counter",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "SoulBondS",
              "src": "contracts/SoulBondS.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "b7b321a629ea0e6c959f7dfd67ba8204de71942a26e3231d536282607995bb22",
          "withoutMetadata": "9a551d99f8d6c693486cdbad3402610b4a6522717e15716e2557d8288395302a",
          "linkedWithoutMetadata": "9a551d99f8d6c693486cdbad3402610b4a6522717e15716e2557d8288395302a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "bcf116a9950926cc5c5c5e2975657bbaa8670053bdba022e30fb79e04d685d35",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "SoulBondA": {
        "src": "contracts/SoulBondA.sol:6",
        "version": {
          "withMetadata": "b8ffd7f7579d7a7d6861b5c670420937cbf7cfebcc3aa4be3f240c872bc3c0bc",
          "withoutMetadata": "3522fb2e053e21c2c8b4228f974a87b3d9b064a56edb4efccebe95f97f5aa04b",
          "linkedWithoutMetadata": "3522fb2e053e21c2c8b4228f974a87b3d9b064a56edb4efccebe95f97f5aa04b"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondA",
            "src": "contracts/SoulBondA.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondA",
              "src": "contracts/SoulBondA.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "91f9384bfde49b29202c653eaa74dadf795c85fc31c14a5db2a6594c1828b2ae",
          "withoutMetadata": "dc061adbde17861a865bebe075b361936803262c13f9d9e2e362885ffcc57423",
          "linkedWithoutMetadata": "dc061adbde17861a865bebe075b361936803262c13f9d9e2e362885ffcc57423"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "addTokenPrice(address,address)",
          "getInterestRate(address)",
          "getTokenPrice(address)",
          "addSoulBondToken(address,uint8)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "editCategories(uint8,uint256)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b76937fae3d3fca56debc5b00961793be25b8bba766c2a433f2c30af531f78a0",
          "withoutMetadata": "dcd1184b2607aade9ce1f3d68b5d254f272bf6d19e2e27300f6195d76b6e288a",
          "linkedWithoutMetadata": "dcd1184b2607aade9ce1f3d68b5d254f272bf6d19e2e27300f6195d76b6e288a"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "b7b321a629ea0e6c959f7dfd67ba8204de71942a26e3231d536282607995bb22",
          "withoutMetadata": "9a551d99f8d6c693486cdbad3402610b4a6522717e15716e2557d8288395302a",
          "linkedWithoutMetadata": "9a551d99f8d6c693486cdbad3402610b4a6522717e15716e2557d8288395302a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "bcf116a9950926cc5c5c5e2975657bbaa8670053bdba022e30fb79e04d685d35",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DaiToken": {
        "src": "contracts/DAI.sol:7",
        "version": {
          "withMetadata": "10434e7e4074a2589ba7d68c2fc343a777507edaade49a9a3722c8c7c8bd3e66",
          "withoutMetadata": "c24bb863d02d98739f7675cf001cb11ecd2da6ca22749171ac96c5526d1619b8",
          "linkedWithoutMetadata": "c24bb863d02d98739f7675cf001cb11ecd2da6ca22749171ac96c5526d1619b8"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DaiToken",
            "src": "contracts/DAI.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "DaiToken",
              "src": "contracts/DAI.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SblToken": {
        "src": "contracts/SblToken.sol:7",
        "version": {
          "withMetadata": "21c5d90f001147eb45f71b33529825ab27657f6e25a0c3e2fef8d8fe9891de75",
          "withoutMetadata": "c48e1181aa2f76bb10c256d5bb8586d49b663bd5244bab1f6003562361f88d4e",
          "linkedWithoutMetadata": "c48e1181aa2f76bb10c256d5bb8586d49b663bd5244bab1f6003562361f88d4e"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SblToken",
            "src": "contracts/SblToken.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SblToken",
              "src": "contracts/SblToken.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondA": {
        "src": "contracts/SoulBondA.sol:6",
        "version": {
          "withMetadata": "5ee745611d0cb6375617fa4aee5a45f3a49abc53a80f73a4aea26b9b3b2ab66e",
          "withoutMetadata": "3522fb2e053e21c2c8b4228f974a87b3d9b064a56edb4efccebe95f97f5aa04b",
          "linkedWithoutMetadata": "3522fb2e053e21c2c8b4228f974a87b3d9b064a56edb4efccebe95f97f5aa04b"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondA",
            "src": "contracts/SoulBondA.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondA",
              "src": "contracts/SoulBondA.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondB": {
        "src": "contracts/SoulBondB.sol:6",
        "version": {
          "withMetadata": "90b723b3091e1ef9bad82bfbe6dcb80bd44dbfa6f7904a1a9f87e9dfd8f901a3",
          "withoutMetadata": "51eb06d3934139582ab55343badc877638afcfb32541629e184091205b6a5a6a",
          "linkedWithoutMetadata": "51eb06d3934139582ab55343badc877638afcfb32541629e184091205b6a5a6a"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondB",
            "src": "contracts/SoulBondB.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondB",
              "src": "contracts/SoulBondB.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondC": {
        "src": "contracts/SoulBondC.sol:6",
        "version": {
          "withMetadata": "dba073a360a37ae6c92d7ef7ec780a226f6a0998f680dfaa9fc0599c288bbbe0",
          "withoutMetadata": "a9d494f8e9c01fd60cfb2a0f7ecf6f423e2dfa620fdc8ed0e6b55feb5f24c537",
          "linkedWithoutMetadata": "a9d494f8e9c01fd60cfb2a0f7ecf6f423e2dfa620fdc8ed0e6b55feb5f24c537"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondC",
            "src": "contracts/SoulBondC.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondC",
              "src": "contracts/SoulBondC.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondD": {
        "src": "contracts/SoulBondD.sol:6",
        "version": {
          "withMetadata": "4d1909f691263583af680678c6d01e9d76f7daa518dd0873a4c1087aedd6c20c",
          "withoutMetadata": "b30d4f68b19e294014a852784395b7bbf89a1331d8e9126d6a87f42d5a35ea15",
          "linkedWithoutMetadata": "b30d4f68b19e294014a852784395b7bbf89a1331d8e9126d6a87f42d5a35ea15"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondD",
            "src": "contracts/SoulBondD.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondD",
              "src": "contracts/SoulBondD.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondS": {
        "src": "contracts/SoulBondS.sol:6",
        "version": {
          "withMetadata": "daabcb80e56353a10632e43e4ea915e604d1390e5d962e942d004546950f5b27",
          "withoutMetadata": "e9c9777db72dc53dc2cacd798d0d54fb0cd84d8922599433c86950104cb61fca",
          "linkedWithoutMetadata": "e9c9777db72dc53dc2cacd798d0d54fb0cd84d8922599433c86950104cb61fca"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondS",
            "src": "contracts/SoulBondS.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondS",
              "src": "contracts/SoulBondS.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "WETHToken": {
        "src": "contracts/WETH.sol:7",
        "version": {
          "withMetadata": "df7b6e71d1b08b31cf23c98af649233fc0be6b58c420575212239ede77ae3370",
          "withoutMetadata": "bee8509f00df7e4fd598fb8b5d4776fa038a08cdc5121b8b375987393fef2a67",
          "linkedWithoutMetadata": "bee8509f00df7e4fd598fb8b5d4776fa038a08cdc5121b8b375987393fef2a67"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WETHToken",
            "src": "contracts/WETH.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "WETHToken",
              "src": "contracts/WETH.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "91f9384bfde49b29202c653eaa74dadf795c85fc31c14a5db2a6594c1828b2ae",
          "withoutMetadata": "dc061adbde17861a865bebe075b361936803262c13f9d9e2e362885ffcc57423",
          "linkedWithoutMetadata": "dc061adbde17861a865bebe075b361936803262c13f9d9e2e362885ffcc57423"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "addTokenPrice(address,address)",
          "getInterestRate(address)",
          "getTokenPrice(address)",
          "addSoulBondToken(address,uint8)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "editCategories(uint8,uint256)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b76937fae3d3fca56debc5b00961793be25b8bba766c2a433f2c30af531f78a0",
          "withoutMetadata": "dcd1184b2607aade9ce1f3d68b5d254f272bf6d19e2e27300f6195d76b6e288a",
          "linkedWithoutMetadata": "dcd1184b2607aade9ce1f3d68b5d254f272bf6d19e2e27300f6195d76b6e288a"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "b7b321a629ea0e6c959f7dfd67ba8204de71942a26e3231d536282607995bb22",
          "withoutMetadata": "9a551d99f8d6c693486cdbad3402610b4a6522717e15716e2557d8288395302a",
          "linkedWithoutMetadata": "9a551d99f8d6c693486cdbad3402610b4a6522717e15716e2557d8288395302a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "bcf116a9950926cc5c5c5e2975657bbaa8670053bdba022e30fb79e04d685d35",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DaiToken": {
        "src": "contracts/DAI.sol:7",
        "version": {
          "withMetadata": "10434e7e4074a2589ba7d68c2fc343a777507edaade49a9a3722c8c7c8bd3e66",
          "withoutMetadata": "c24bb863d02d98739f7675cf001cb11ecd2da6ca22749171ac96c5526d1619b8",
          "linkedWithoutMetadata": "c24bb863d02d98739f7675cf001cb11ecd2da6ca22749171ac96c5526d1619b8"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DaiToken",
            "src": "contracts/DAI.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "DaiToken",
              "src": "contracts/DAI.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SblToken": {
        "src": "contracts/SblToken.sol:7",
        "version": {
          "withMetadata": "21c5d90f001147eb45f71b33529825ab27657f6e25a0c3e2fef8d8fe9891de75",
          "withoutMetadata": "c48e1181aa2f76bb10c256d5bb8586d49b663bd5244bab1f6003562361f88d4e",
          "linkedWithoutMetadata": "c48e1181aa2f76bb10c256d5bb8586d49b663bd5244bab1f6003562361f88d4e"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SblToken",
            "src": "contracts/SblToken.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SblToken",
              "src": "contracts/SblToken.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondA": {
        "src": "contracts/SoulBondA.sol:6",
        "version": {
          "withMetadata": "5ee745611d0cb6375617fa4aee5a45f3a49abc53a80f73a4aea26b9b3b2ab66e",
          "withoutMetadata": "3522fb2e053e21c2c8b4228f974a87b3d9b064a56edb4efccebe95f97f5aa04b",
          "linkedWithoutMetadata": "3522fb2e053e21c2c8b4228f974a87b3d9b064a56edb4efccebe95f97f5aa04b"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondA",
            "src": "contracts/SoulBondA.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondA",
              "src": "contracts/SoulBondA.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondB": {
        "src": "contracts/SoulBondB.sol:6",
        "version": {
          "withMetadata": "90b723b3091e1ef9bad82bfbe6dcb80bd44dbfa6f7904a1a9f87e9dfd8f901a3",
          "withoutMetadata": "51eb06d3934139582ab55343badc877638afcfb32541629e184091205b6a5a6a",
          "linkedWithoutMetadata": "51eb06d3934139582ab55343badc877638afcfb32541629e184091205b6a5a6a"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondB",
            "src": "contracts/SoulBondB.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondB",
              "src": "contracts/SoulBondB.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondC": {
        "src": "contracts/SoulBondC.sol:6",
        "version": {
          "withMetadata": "dba073a360a37ae6c92d7ef7ec780a226f6a0998f680dfaa9fc0599c288bbbe0",
          "withoutMetadata": "a9d494f8e9c01fd60cfb2a0f7ecf6f423e2dfa620fdc8ed0e6b55feb5f24c537",
          "linkedWithoutMetadata": "a9d494f8e9c01fd60cfb2a0f7ecf6f423e2dfa620fdc8ed0e6b55feb5f24c537"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondC",
            "src": "contracts/SoulBondC.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondC",
              "src": "contracts/SoulBondC.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondD": {
        "src": "contracts/SoulBondD.sol:6",
        "version": {
          "withMetadata": "4d1909f691263583af680678c6d01e9d76f7daa518dd0873a4c1087aedd6c20c",
          "withoutMetadata": "b30d4f68b19e294014a852784395b7bbf89a1331d8e9126d6a87f42d5a35ea15",
          "linkedWithoutMetadata": "b30d4f68b19e294014a852784395b7bbf89a1331d8e9126d6a87f42d5a35ea15"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondD",
            "src": "contracts/SoulBondD.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondD",
              "src": "contracts/SoulBondD.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondS": {
        "src": "contracts/SoulBondS.sol:6",
        "version": {
          "withMetadata": "daabcb80e56353a10632e43e4ea915e604d1390e5d962e942d004546950f5b27",
          "withoutMetadata": "e9c9777db72dc53dc2cacd798d0d54fb0cd84d8922599433c86950104cb61fca",
          "linkedWithoutMetadata": "e9c9777db72dc53dc2cacd798d0d54fb0cd84d8922599433c86950104cb61fca"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondS",
            "src": "contracts/SoulBondS.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondS",
              "src": "contracts/SoulBondS.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "WETHToken": {
        "src": "contracts/WETH.sol:7",
        "version": {
          "withMetadata": "df7b6e71d1b08b31cf23c98af649233fc0be6b58c420575212239ede77ae3370",
          "withoutMetadata": "bee8509f00df7e4fd598fb8b5d4776fa038a08cdc5121b8b375987393fef2a67",
          "linkedWithoutMetadata": "bee8509f00df7e4fd598fb8b5d4776fa038a08cdc5121b8b375987393fef2a67"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WETHToken",
            "src": "contracts/WETH.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "WETHToken",
              "src": "contracts/WETH.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "91f9384bfde49b29202c653eaa74dadf795c85fc31c14a5db2a6594c1828b2ae",
          "withoutMetadata": "dc061adbde17861a865bebe075b361936803262c13f9d9e2e362885ffcc57423",
          "linkedWithoutMetadata": "dc061adbde17861a865bebe075b361936803262c13f9d9e2e362885ffcc57423"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "addTokenPrice(address,address)",
          "getInterestRate(address)",
          "getTokenPrice(address)",
          "addSoulBondToken(address,uint8)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "editCategories(uint8,uint256)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b76937fae3d3fca56debc5b00961793be25b8bba766c2a433f2c30af531f78a0",
          "withoutMetadata": "dcd1184b2607aade9ce1f3d68b5d254f272bf6d19e2e27300f6195d76b6e288a",
          "linkedWithoutMetadata": "dcd1184b2607aade9ce1f3d68b5d254f272bf6d19e2e27300f6195d76b6e288a"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "b7b321a629ea0e6c959f7dfd67ba8204de71942a26e3231d536282607995bb22",
          "withoutMetadata": "9a551d99f8d6c693486cdbad3402610b4a6522717e15716e2557d8288395302a",
          "linkedWithoutMetadata": "9a551d99f8d6c693486cdbad3402610b4a6522717e15716e2557d8288395302a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "bcf116a9950926cc5c5c5e2975657bbaa8670053bdba022e30fb79e04d685d35",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DaiToken": {
        "src": "contracts/DAI.sol:7",
        "version": {
          "withMetadata": "10434e7e4074a2589ba7d68c2fc343a777507edaade49a9a3722c8c7c8bd3e66",
          "withoutMetadata": "c24bb863d02d98739f7675cf001cb11ecd2da6ca22749171ac96c5526d1619b8",
          "linkedWithoutMetadata": "c24bb863d02d98739f7675cf001cb11ecd2da6ca22749171ac96c5526d1619b8"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DaiToken",
            "src": "contracts/DAI.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "DaiToken",
              "src": "contracts/DAI.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SblToken": {
        "src": "contracts/SblToken.sol:7",
        "version": {
          "withMetadata": "21c5d90f001147eb45f71b33529825ab27657f6e25a0c3e2fef8d8fe9891de75",
          "withoutMetadata": "c48e1181aa2f76bb10c256d5bb8586d49b663bd5244bab1f6003562361f88d4e",
          "linkedWithoutMetadata": "c48e1181aa2f76bb10c256d5bb8586d49b663bd5244bab1f6003562361f88d4e"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SblToken",
            "src": "contracts/SblToken.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SblToken",
              "src": "contracts/SblToken.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondA": {
        "src": "contracts/SoulBondA.sol:6",
        "version": {
          "withMetadata": "5ee745611d0cb6375617fa4aee5a45f3a49abc53a80f73a4aea26b9b3b2ab66e",
          "withoutMetadata": "3522fb2e053e21c2c8b4228f974a87b3d9b064a56edb4efccebe95f97f5aa04b",
          "linkedWithoutMetadata": "3522fb2e053e21c2c8b4228f974a87b3d9b064a56edb4efccebe95f97f5aa04b"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondA",
            "src": "contracts/SoulBondA.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondA",
              "src": "contracts/SoulBondA.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondB": {
        "src": "contracts/SoulBondB.sol:6",
        "version": {
          "withMetadata": "90b723b3091e1ef9bad82bfbe6dcb80bd44dbfa6f7904a1a9f87e9dfd8f901a3",
          "withoutMetadata": "51eb06d3934139582ab55343badc877638afcfb32541629e184091205b6a5a6a",
          "linkedWithoutMetadata": "51eb06d3934139582ab55343badc877638afcfb32541629e184091205b6a5a6a"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondB",
            "src": "contracts/SoulBondB.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondB",
              "src": "contracts/SoulBondB.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondC": {
        "src": "contracts/SoulBondC.sol:6",
        "version": {
          "withMetadata": "dba073a360a37ae6c92d7ef7ec780a226f6a0998f680dfaa9fc0599c288bbbe0",
          "withoutMetadata": "a9d494f8e9c01fd60cfb2a0f7ecf6f423e2dfa620fdc8ed0e6b55feb5f24c537",
          "linkedWithoutMetadata": "a9d494f8e9c01fd60cfb2a0f7ecf6f423e2dfa620fdc8ed0e6b55feb5f24c537"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondC",
            "src": "contracts/SoulBondC.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondC",
              "src": "contracts/SoulBondC.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondD": {
        "src": "contracts/SoulBondD.sol:6",
        "version": {
          "withMetadata": "4d1909f691263583af680678c6d01e9d76f7daa518dd0873a4c1087aedd6c20c",
          "withoutMetadata": "b30d4f68b19e294014a852784395b7bbf89a1331d8e9126d6a87f42d5a35ea15",
          "linkedWithoutMetadata": "b30d4f68b19e294014a852784395b7bbf89a1331d8e9126d6a87f42d5a35ea15"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondD",
            "src": "contracts/SoulBondD.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondD",
              "src": "contracts/SoulBondD.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondS": {
        "src": "contracts/SoulBondS.sol:6",
        "version": {
          "withMetadata": "daabcb80e56353a10632e43e4ea915e604d1390e5d962e942d004546950f5b27",
          "withoutMetadata": "e9c9777db72dc53dc2cacd798d0d54fb0cd84d8922599433c86950104cb61fca",
          "linkedWithoutMetadata": "e9c9777db72dc53dc2cacd798d0d54fb0cd84d8922599433c86950104cb61fca"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondS",
            "src": "contracts/SoulBondS.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondS",
              "src": "contracts/SoulBondS.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "WETHToken": {
        "src": "contracts/WETH.sol:7",
        "version": {
          "withMetadata": "df7b6e71d1b08b31cf23c98af649233fc0be6b58c420575212239ede77ae3370",
          "withoutMetadata": "bee8509f00df7e4fd598fb8b5d4776fa038a08cdc5121b8b375987393fef2a67",
          "linkedWithoutMetadata": "bee8509f00df7e4fd598fb8b5d4776fa038a08cdc5121b8b375987393fef2a67"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WETHToken",
            "src": "contracts/WETH.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "WETHToken",
              "src": "contracts/WETH.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "91f9384bfde49b29202c653eaa74dadf795c85fc31c14a5db2a6594c1828b2ae",
          "withoutMetadata": "dc061adbde17861a865bebe075b361936803262c13f9d9e2e362885ffcc57423",
          "linkedWithoutMetadata": "dc061adbde17861a865bebe075b361936803262c13f9d9e2e362885ffcc57423"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "addTokenPrice(address,address)",
          "getInterestRate(address)",
          "getTokenPrice(address)",
          "addSoulBondToken(address,uint8)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "editCategories(uint8,uint256)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b76937fae3d3fca56debc5b00961793be25b8bba766c2a433f2c30af531f78a0",
          "withoutMetadata": "dcd1184b2607aade9ce1f3d68b5d254f272bf6d19e2e27300f6195d76b6e288a",
          "linkedWithoutMetadata": "dcd1184b2607aade9ce1f3d68b5d254f272bf6d19e2e27300f6195d76b6e288a"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "b7b321a629ea0e6c959f7dfd67ba8204de71942a26e3231d536282607995bb22",
          "withoutMetadata": "9a551d99f8d6c693486cdbad3402610b4a6522717e15716e2557d8288395302a",
          "linkedWithoutMetadata": "9a551d99f8d6c693486cdbad3402610b4a6522717e15716e2557d8288395302a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "bcf116a9950926cc5c5c5e2975657bbaa8670053bdba022e30fb79e04d685d35",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DaiToken": {
        "src": "contracts/DAI.sol:7",
        "version": {
          "withMetadata": "10434e7e4074a2589ba7d68c2fc343a777507edaade49a9a3722c8c7c8bd3e66",
          "withoutMetadata": "c24bb863d02d98739f7675cf001cb11ecd2da6ca22749171ac96c5526d1619b8",
          "linkedWithoutMetadata": "c24bb863d02d98739f7675cf001cb11ecd2da6ca22749171ac96c5526d1619b8"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DaiToken",
            "src": "contracts/DAI.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "DaiToken",
              "src": "contracts/DAI.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SblToken": {
        "src": "contracts/SblToken.sol:7",
        "version": {
          "withMetadata": "21c5d90f001147eb45f71b33529825ab27657f6e25a0c3e2fef8d8fe9891de75",
          "withoutMetadata": "c48e1181aa2f76bb10c256d5bb8586d49b663bd5244bab1f6003562361f88d4e",
          "linkedWithoutMetadata": "c48e1181aa2f76bb10c256d5bb8586d49b663bd5244bab1f6003562361f88d4e"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SblToken",
            "src": "contracts/SblToken.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SblToken",
              "src": "contracts/SblToken.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondA": {
        "src": "contracts/SoulBondA.sol:6",
        "version": {
          "withMetadata": "5ee745611d0cb6375617fa4aee5a45f3a49abc53a80f73a4aea26b9b3b2ab66e",
          "withoutMetadata": "3522fb2e053e21c2c8b4228f974a87b3d9b064a56edb4efccebe95f97f5aa04b",
          "linkedWithoutMetadata": "3522fb2e053e21c2c8b4228f974a87b3d9b064a56edb4efccebe95f97f5aa04b"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondA",
            "src": "contracts/SoulBondA.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondA",
              "src": "contracts/SoulBondA.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondB": {
        "src": "contracts/SoulBondB.sol:6",
        "version": {
          "withMetadata": "90b723b3091e1ef9bad82bfbe6dcb80bd44dbfa6f7904a1a9f87e9dfd8f901a3",
          "withoutMetadata": "51eb06d3934139582ab55343badc877638afcfb32541629e184091205b6a5a6a",
          "linkedWithoutMetadata": "51eb06d3934139582ab55343badc877638afcfb32541629e184091205b6a5a6a"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondB",
            "src": "contracts/SoulBondB.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondB",
              "src": "contracts/SoulBondB.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondC": {
        "src": "contracts/SoulBondC.sol:6",
        "version": {
          "withMetadata": "dba073a360a37ae6c92d7ef7ec780a226f6a0998f680dfaa9fc0599c288bbbe0",
          "withoutMetadata": "a9d494f8e9c01fd60cfb2a0f7ecf6f423e2dfa620fdc8ed0e6b55feb5f24c537",
          "linkedWithoutMetadata": "a9d494f8e9c01fd60cfb2a0f7ecf6f423e2dfa620fdc8ed0e6b55feb5f24c537"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondC",
            "src": "contracts/SoulBondC.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondC",
              "src": "contracts/SoulBondC.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondD": {
        "src": "contracts/SoulBondD.sol:6",
        "version": {
          "withMetadata": "4d1909f691263583af680678c6d01e9d76f7daa518dd0873a4c1087aedd6c20c",
          "withoutMetadata": "b30d4f68b19e294014a852784395b7bbf89a1331d8e9126d6a87f42d5a35ea15",
          "linkedWithoutMetadata": "b30d4f68b19e294014a852784395b7bbf89a1331d8e9126d6a87f42d5a35ea15"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondD",
            "src": "contracts/SoulBondD.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondD",
              "src": "contracts/SoulBondD.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondS": {
        "src": "contracts/SoulBondS.sol:6",
        "version": {
          "withMetadata": "daabcb80e56353a10632e43e4ea915e604d1390e5d962e942d004546950f5b27",
          "withoutMetadata": "e9c9777db72dc53dc2cacd798d0d54fb0cd84d8922599433c86950104cb61fca",
          "linkedWithoutMetadata": "e9c9777db72dc53dc2cacd798d0d54fb0cd84d8922599433c86950104cb61fca"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondS",
            "src": "contracts/SoulBondS.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondS",
              "src": "contracts/SoulBondS.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "WETHToken": {
        "src": "contracts/WETH.sol:7",
        "version": {
          "withMetadata": "df7b6e71d1b08b31cf23c98af649233fc0be6b58c420575212239ede77ae3370",
          "withoutMetadata": "bee8509f00df7e4fd598fb8b5d4776fa038a08cdc5121b8b375987393fef2a67",
          "linkedWithoutMetadata": "bee8509f00df7e4fd598fb8b5d4776fa038a08cdc5121b8b375987393fef2a67"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WETHToken",
            "src": "contracts/WETH.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "WETHToken",
              "src": "contracts/WETH.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "91f9384bfde49b29202c653eaa74dadf795c85fc31c14a5db2a6594c1828b2ae",
          "withoutMetadata": "dc061adbde17861a865bebe075b361936803262c13f9d9e2e362885ffcc57423",
          "linkedWithoutMetadata": "dc061adbde17861a865bebe075b361936803262c13f9d9e2e362885ffcc57423"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "addTokenPrice(address,address)",
          "getInterestRate(address)",
          "getTokenPrice(address)",
          "addSoulBondToken(address,uint8)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "editCategories(uint8,uint256)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b76937fae3d3fca56debc5b00961793be25b8bba766c2a433f2c30af531f78a0",
          "withoutMetadata": "dcd1184b2607aade9ce1f3d68b5d254f272bf6d19e2e27300f6195d76b6e288a",
          "linkedWithoutMetadata": "dcd1184b2607aade9ce1f3d68b5d254f272bf6d19e2e27300f6195d76b6e288a"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "b7b321a629ea0e6c959f7dfd67ba8204de71942a26e3231d536282607995bb22",
          "withoutMetadata": "9a551d99f8d6c693486cdbad3402610b4a6522717e15716e2557d8288395302a",
          "linkedWithoutMetadata": "9a551d99f8d6c693486cdbad3402610b4a6522717e15716e2557d8288395302a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "bcf116a9950926cc5c5c5e2975657bbaa8670053bdba022e30fb79e04d685d35",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DaiToken": {
        "src": "contracts/DAI.sol:7",
        "version": {
          "withMetadata": "10434e7e4074a2589ba7d68c2fc343a777507edaade49a9a3722c8c7c8bd3e66",
          "withoutMetadata": "c24bb863d02d98739f7675cf001cb11ecd2da6ca22749171ac96c5526d1619b8",
          "linkedWithoutMetadata": "c24bb863d02d98739f7675cf001cb11ecd2da6ca22749171ac96c5526d1619b8"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DaiToken",
            "src": "contracts/DAI.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "DaiToken",
              "src": "contracts/DAI.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SblToken": {
        "src": "contracts/SblToken.sol:7",
        "version": {
          "withMetadata": "21c5d90f001147eb45f71b33529825ab27657f6e25a0c3e2fef8d8fe9891de75",
          "withoutMetadata": "c48e1181aa2f76bb10c256d5bb8586d49b663bd5244bab1f6003562361f88d4e",
          "linkedWithoutMetadata": "c48e1181aa2f76bb10c256d5bb8586d49b663bd5244bab1f6003562361f88d4e"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SblToken",
            "src": "contracts/SblToken.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SblToken",
              "src": "contracts/SblToken.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondA": {
        "src": "contracts/SoulBondA.sol:6",
        "version": {
          "withMetadata": "5ee745611d0cb6375617fa4aee5a45f3a49abc53a80f73a4aea26b9b3b2ab66e",
          "withoutMetadata": "3522fb2e053e21c2c8b4228f974a87b3d9b064a56edb4efccebe95f97f5aa04b",
          "linkedWithoutMetadata": "3522fb2e053e21c2c8b4228f974a87b3d9b064a56edb4efccebe95f97f5aa04b"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondA",
            "src": "contracts/SoulBondA.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondA",
              "src": "contracts/SoulBondA.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondB": {
        "src": "contracts/SoulBondB.sol:6",
        "version": {
          "withMetadata": "90b723b3091e1ef9bad82bfbe6dcb80bd44dbfa6f7904a1a9f87e9dfd8f901a3",
          "withoutMetadata": "51eb06d3934139582ab55343badc877638afcfb32541629e184091205b6a5a6a",
          "linkedWithoutMetadata": "51eb06d3934139582ab55343badc877638afcfb32541629e184091205b6a5a6a"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondB",
            "src": "contracts/SoulBondB.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondB",
              "src": "contracts/SoulBondB.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondC": {
        "src": "contracts/SoulBondC.sol:6",
        "version": {
          "withMetadata": "dba073a360a37ae6c92d7ef7ec780a226f6a0998f680dfaa9fc0599c288bbbe0",
          "withoutMetadata": "a9d494f8e9c01fd60cfb2a0f7ecf6f423e2dfa620fdc8ed0e6b55feb5f24c537",
          "linkedWithoutMetadata": "a9d494f8e9c01fd60cfb2a0f7ecf6f423e2dfa620fdc8ed0e6b55feb5f24c537"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondC",
            "src": "contracts/SoulBondC.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondC",
              "src": "contracts/SoulBondC.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondD": {
        "src": "contracts/SoulBondD.sol:6",
        "version": {
          "withMetadata": "4d1909f691263583af680678c6d01e9d76f7daa518dd0873a4c1087aedd6c20c",
          "withoutMetadata": "b30d4f68b19e294014a852784395b7bbf89a1331d8e9126d6a87f42d5a35ea15",
          "linkedWithoutMetadata": "b30d4f68b19e294014a852784395b7bbf89a1331d8e9126d6a87f42d5a35ea15"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondD",
            "src": "contracts/SoulBondD.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondD",
              "src": "contracts/SoulBondD.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondS": {
        "src": "contracts/SoulBondS.sol:6",
        "version": {
          "withMetadata": "daabcb80e56353a10632e43e4ea915e604d1390e5d962e942d004546950f5b27",
          "withoutMetadata": "e9c9777db72dc53dc2cacd798d0d54fb0cd84d8922599433c86950104cb61fca",
          "linkedWithoutMetadata": "e9c9777db72dc53dc2cacd798d0d54fb0cd84d8922599433c86950104cb61fca"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondS",
            "src": "contracts/SoulBondS.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondS",
              "src": "contracts/SoulBondS.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "WETHToken": {
        "src": "contracts/WETH.sol:7",
        "version": {
          "withMetadata": "df7b6e71d1b08b31cf23c98af649233fc0be6b58c420575212239ede77ae3370",
          "withoutMetadata": "bee8509f00df7e4fd598fb8b5d4776fa038a08cdc5121b8b375987393fef2a67",
          "linkedWithoutMetadata": "bee8509f00df7e4fd598fb8b5d4776fa038a08cdc5121b8b375987393fef2a67"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WETHToken",
            "src": "contracts/WETH.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "WETHToken",
              "src": "contracts/WETH.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "91f9384bfde49b29202c653eaa74dadf795c85fc31c14a5db2a6594c1828b2ae",
          "withoutMetadata": "dc061adbde17861a865bebe075b361936803262c13f9d9e2e362885ffcc57423",
          "linkedWithoutMetadata": "dc061adbde17861a865bebe075b361936803262c13f9d9e2e362885ffcc57423"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "addTokenPrice(address,address)",
          "getInterestRate(address)",
          "getTokenPrice(address)",
          "addSoulBondToken(address,uint8)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "editCategories(uint8,uint256)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    },
    {
      "AggregatorV3Interface": {
        "src": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "decimals()",
          "description()",
          "version()",
          "getRoundData(uint80)",
          "latestRoundData()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:35",
        "version": {
          "withMetadata": "b76937fae3d3fca56debc5b00961793be25b8bba766c2a433f2c30af531f78a0",
          "withoutMetadata": "dcd1184b2607aade9ce1f3d68b5d254f272bf6d19e2e27300f6195d76b6e288a",
          "linkedWithoutMetadata": "dcd1184b2607aade9ce1f3d68b5d254f272bf6d19e2e27300f6195d76b6e288a"
        },
        "inherit": [
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "(string,string)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC20",
            "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:54"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC20": {
        "src": "@openzeppelin/contracts/token/ERC20/IERC20.sol:9",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC20Metadata": {
        "src": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol:13",
        "inherit": [
          "IERC20"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:19",
        "version": {
          "withMetadata": "b7b321a629ea0e6c959f7dfd67ba8204de71942a26e3231d536282607995bb22",
          "withoutMetadata": "9a551d99f8d6c693486cdbad3402610b4a6522717e15716e2557d8288395302a",
          "linkedWithoutMetadata": "9a551d99f8d6c693486cdbad3402610b4a6522717e15716e2557d8288395302a"
        },
        "inherit": [
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [
          "Address",
          "Strings"
        ],
        "methods": [
          "(string,string)",
          "supportsInterface(bytes4)",
          "balanceOf(address)",
          "ownerOf(uint256)",
          "name()",
          "symbol()",
          "tokenURI(uint256)",
          "approve(address,uint256)",
          "getApproved(uint256)",
          "setApprovalForAll(address,bool)",
          "isApprovedForAll(address,address)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ERC721",
            "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:44"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "IERC721": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721.sol:11",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "ownerOf(uint256)",
          "safeTransferFrom(address,address,uint256,bytes)",
          "safeTransferFrom(address,address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "setApprovalForAll(address,bool)",
          "getApproved(uint256)",
          "isApprovedForAll(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Receiver": {
        "src": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "onERC721Received(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC721Metadata": {
        "src": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol:12",
        "inherit": [
          "IERC721",
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "tokenURI(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Address": {
        "src": "@openzeppelin/contracts/utils/Address.sol:9",
        "version": {
          "withMetadata": "f453140119aa4ab940c1c866e30faba30c70b1bf42ecb26b808dc4e355066110",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "@openzeppelin/contracts/utils/Address.sol:191"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Context": {
        "src": "@openzeppelin/contracts/utils/Context.sol:16",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "Strings": {
        "src": "@openzeppelin/contracts/utils/Strings.sol:9",
        "version": {
          "withMetadata": "bcf116a9950926cc5c5c5e2975657bbaa8670053bdba022e30fb79e04d685d35",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "ERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/ERC165.sol:22",
        "inherit": [
          "IERC165"
        ],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "IERC165": {
        "src": "@openzeppelin/contracts/utils/introspection/IERC165.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "supportsInterface(bytes4)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      },
      "DaiToken": {
        "src": "contracts/DAI.sol:7",
        "version": {
          "withMetadata": "10434e7e4074a2589ba7d68c2fc343a777507edaade49a9a3722c8c7c8bd3e66",
          "withoutMetadata": "c24bb863d02d98739f7675cf001cb11ecd2da6ca22749171ac96c5526d1619b8",
          "linkedWithoutMetadata": "c24bb863d02d98739f7675cf001cb11ecd2da6ca22749171ac96c5526d1619b8"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "DaiToken",
            "src": "contracts/DAI.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "DaiToken",
              "src": "contracts/DAI.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SblToken": {
        "src": "contracts/SblToken.sol:7",
        "version": {
          "withMetadata": "21c5d90f001147eb45f71b33529825ab27657f6e25a0c3e2fef8d8fe9891de75",
          "withoutMetadata": "c48e1181aa2f76bb10c256d5bb8586d49b663bd5244bab1f6003562361f88d4e",
          "linkedWithoutMetadata": "c48e1181aa2f76bb10c256d5bb8586d49b663bd5244bab1f6003562361f88d4e"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SblToken",
            "src": "contracts/SblToken.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "SblToken",
              "src": "contracts/SblToken.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondA": {
        "src": "contracts/SoulBondA.sol:6",
        "version": {
          "withMetadata": "5ee745611d0cb6375617fa4aee5a45f3a49abc53a80f73a4aea26b9b3b2ab66e",
          "withoutMetadata": "3522fb2e053e21c2c8b4228f974a87b3d9b064a56edb4efccebe95f97f5aa04b",
          "linkedWithoutMetadata": "3522fb2e053e21c2c8b4228f974a87b3d9b064a56edb4efccebe95f97f5aa04b"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondA",
            "src": "contracts/SoulBondA.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondA",
              "src": "contracts/SoulBondA.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondB": {
        "src": "contracts/SoulBondB.sol:6",
        "version": {
          "withMetadata": "90b723b3091e1ef9bad82bfbe6dcb80bd44dbfa6f7904a1a9f87e9dfd8f901a3",
          "withoutMetadata": "51eb06d3934139582ab55343badc877638afcfb32541629e184091205b6a5a6a",
          "linkedWithoutMetadata": "51eb06d3934139582ab55343badc877638afcfb32541629e184091205b6a5a6a"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondB",
            "src": "contracts/SoulBondB.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondB",
              "src": "contracts/SoulBondB.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondC": {
        "src": "contracts/SoulBondC.sol:6",
        "version": {
          "withMetadata": "dba073a360a37ae6c92d7ef7ec780a226f6a0998f680dfaa9fc0599c288bbbe0",
          "withoutMetadata": "a9d494f8e9c01fd60cfb2a0f7ecf6f423e2dfa620fdc8ed0e6b55feb5f24c537",
          "linkedWithoutMetadata": "a9d494f8e9c01fd60cfb2a0f7ecf6f423e2dfa620fdc8ed0e6b55feb5f24c537"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondC",
            "src": "contracts/SoulBondC.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondC",
              "src": "contracts/SoulBondC.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondD": {
        "src": "contracts/SoulBondD.sol:6",
        "version": {
          "withMetadata": "4d1909f691263583af680678c6d01e9d76f7daa518dd0873a4c1087aedd6c20c",
          "withoutMetadata": "b30d4f68b19e294014a852784395b7bbf89a1331d8e9126d6a87f42d5a35ea15",
          "linkedWithoutMetadata": "b30d4f68b19e294014a852784395b7bbf89a1331d8e9126d6a87f42d5a35ea15"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondD",
            "src": "contracts/SoulBondD.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondD",
              "src": "contracts/SoulBondD.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "SoulBondS": {
        "src": "contracts/SoulBondS.sol:6",
        "version": {
          "withMetadata": "daabcb80e56353a10632e43e4ea915e604d1390e5d962e942d004546950f5b27",
          "withoutMetadata": "e9c9777db72dc53dc2cacd798d0d54fb0cd84d8922599433c86950104cb61fca",
          "linkedWithoutMetadata": "e9c9777db72dc53dc2cacd798d0d54fb0cd84d8922599433c86950104cb61fca"
        },
        "inherit": [
          "ERC721",
          "IERC721Metadata",
          "IERC721",
          "ERC165",
          "IERC165",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(address,uint256)",
          "transferFrom(address,address,uint256)",
          "safeTransferFrom(address,address,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "SoulBondS",
            "src": "contracts/SoulBondS.sol:9"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:24"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:27"
            },
            {
              "label": "_owners",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:30"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:33"
            },
            {
              "label": "_tokenApprovals",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:36"
            },
            {
              "label": "_operatorApprovals",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "contract": "ERC721",
              "src": "@openzeppelin/contracts/token/ERC721/ERC721.sol:39"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "SoulBondS",
              "src": "contracts/SoulBondS.sol:8"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_bool))": {
              "label": "mapping(address => mapping(address => bool))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "WETHToken": {
        "src": "contracts/WETH.sol:7",
        "version": {
          "withMetadata": "df7b6e71d1b08b31cf23c98af649233fc0be6b58c420575212239ede77ae3370",
          "withoutMetadata": "bee8509f00df7e4fd598fb8b5d4776fa038a08cdc5121b8b375987393fef2a67",
          "linkedWithoutMetadata": "bee8509f00df7e4fd598fb8b5d4776fa038a08cdc5121b8b375987393fef2a67"
        },
        "inherit": [
          "ERC20",
          "IERC20Metadata",
          "IERC20",
          "Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "mint(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "WETHToken",
            "src": "contracts/WETH.sol:10"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_balances",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:36"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:38"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:40"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "3",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:42"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "4",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "@openzeppelin/contracts/token/ERC20/ERC20.sol:43"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "WETHToken",
              "src": "contracts/WETH.sol:9"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "sbLending": {
        "src": "contracts/sbLending-V0.sol:9",
        "version": {
          "withMetadata": "91f9384bfde49b29202c653eaa74dadf795c85fc31c14a5db2a6594c1828b2ae",
          "withoutMetadata": "dc061adbde17861a865bebe075b361936803262c13f9d9e2e362885ffcc57423",
          "linkedWithoutMetadata": "dc061adbde17861a865bebe075b361936803262c13f9d9e2e362885ffcc57423"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "depositERC20(address,uint256)",
          "withdrawERC20(address,uint256)",
          "borrowERC20(address,uint256)",
          "payBackERC20(address,uint256)",
          "liquidationCall(address,address,address,uint256)",
          "addTokenInteresFixedInterestRate(address,uint256)",
          "addTokenPrice(address,address)",
          "getInterestRate(address)",
          "getTokenPrice(address)",
          "addSoulBondToken(address,uint8)",
          "updateBalanceWithInterestRate(address)",
          "updateAllBalances()",
          "calculateMaxBorrow(address)",
          "calculateTotalBorrowed(address)",
          "calculateTotalDeposit(address)",
          "addBorrowToken(address)",
          "addDepositToken(address)",
          "editCategories(uint8,uint256)",
          "addOracle(address,address)",
          "getLatestPrice(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "sbLending",
            "src": "contracts/sbLending-V0.sol:34"
          },
          {
            "kind": "state-variable-assignment",
            "name": "baseMaxBorrow",
            "src": "contracts/sbLending-V0.sol:25"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "soulBondList",
              "offset": 0,
              "slot": "0",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:10"
            },
            {
              "label": "soulBondCategories",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint8)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:11"
            },
            {
              "label": "categoryPower",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_uint8,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:12"
            },
            {
              "label": "ERC20Oracles",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:14"
            },
            {
              "label": "tokenToOracleToken",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_address)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:15"
            },
            {
              "label": "ERC20BorrowList",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:16"
            },
            {
              "label": "ERC20DepositList",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:17"
            },
            {
              "label": "allowedBorrowedTokens",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:18"
            },
            {
              "label": "allowedDepositTokens",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:19"
            },
            {
              "label": "userLastTokenUpdate",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:20"
            },
            {
              "label": "ERC20BorrowTokens",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:22"
            },
            {
              "label": "ERC20DepositTokens",
              "offset": 0,
              "slot": "11",
              "type": "t_array(t_address)dyn_storage",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:23"
            },
            {
              "label": "baseMaxBorrow",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:25"
            },
            {
              "label": "tokenFixedInterestRate",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:29"
            },
            {
              "label": "owner",
              "offset": 0,
              "slot": "14",
              "type": "t_address",
              "contract": "sbLending",
              "src": "contracts/sbLending-V0.sol:32"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint8)": {
              "label": "mapping(address => uint8)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint8,t_uint256)": {
              "label": "mapping(uint8 => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.1",
          "flat": true
        }
      },
      "console": {
        "src": "hardhat/console.sol:4",
        "version": {
          "withMetadata": "beae05454d6c24b0af2926d3f12cbd62c3db4a4f7dff423bd7ff2ddbe2972f20",
          "withoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff",
          "linkedWithoutMetadata": "08d24783a787f8a51dea0c166bb6f91a4f0865e02d03d749f102d332e6ead0ff"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.1",
          "flat": false
        }
      }
    }
  ]
}